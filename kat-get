#!/usr/bin/perl
use Mojolicious::Lite;
use Mojo::UserAgent;
use Mojo::DOM;
use Mojo::Util qw(url_escape);
use Getopt::Long;

# Parse command line
my $port;
my $daemon;
GetOptions(
    "d|daemon" => \$daemon,
    "p|port=i" => \$port,
    "h|help" => sub {
        print <<EOF;
USAGE
kat-get MotoGP Jerez 720p
kat-get -d
kat-get -p 8080

DESCRIPTION
Torrent search and start from Kickass Torrents, command line or webapp.
In the first form run in CLI mode and search torrents for terms in args,
and start selected torrent.
Start as a webapp with options -d or -p.

OPTIONS
-d	start as webapp, default port 3000
-p port	start as webapp on specified port
-h	print this help
EOF
        exit 0;
    },
);
$daemon = 1 if $port;
$port //= 3000 if $daemon;
my $query = url_escape join(' ', @ARGV);
shift @ARGV while @ARGV;

# User agent object
my $ua = Mojo::UserAgent->new;

# Routes
get '/' => sub {
    my $c = shift;
    $c->render(template => 'page', title => 'Search');
};

get '/*query' => sub {
    my $c = shift;
    $c->render(json => [ search($c->stash('query')) ]);
};

# Run webapp or CLI
if ($daemon) {
    app->start('daemon', "http://*:$port");
} else {
    my $magnet = cli() or die "No hits or selection\n";
    system "transmission-remote -a $magnet";
}

# Helpers
sub cli {
    $|++;
    return unless $query;
    my @results = search($query);
    my $i = 0;
    print "No       SIZE  SEEDS  TITLE\n";
    print map {
        sprintf "%2d %10s %6d  %s\n", $i++, $_->{size}, $_->{seeds}, $_->{title}
    } @results;
    print "Enter No of torrent to start: ";
    $i = <>;
    chomp $i;
    return unless $i =~ /^\d+$/ && $i < @results;
    return $results[$i]->{magnet};
}

sub search {
    my $query = shift;
    my $rss = $ua->get("https://kat.cr/usearch/$query/?rss=1")->res->body;
    my $dom = Mojo::DOM->new($rss);

    return map { {
        title => $_->children('title')->first->content,
        magnet => $_->children('torrent\\:magnetURI')->first->content =~ /!\[CDATA\[(.+)\]\]/,
        seeds => $_->children('torrent\\:seeds')->first->content,
        size => human_size($_->children('torrent\\:contentLength')->first->content),
    } } @{ $dom->find('item') };
}

sub human_size {
    my $bytes = shift;
    my $i = 0;
    our @formats = ("%d", "%.2f K", "%.2f M", "%.2f G", "%.2f T");
    while ($bytes >= 1024) {
        $i++;
        $bytes /= 1024;
    }
    return sprintf($formats[$i], $bytes);
}

__DATA__

@@ page.html.ep
<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="style.css">
<script src="kat.js"></script>
<title>kat-get <%= $title %></title>
</head>
<body>
<div id="toolbar">
<form name="search">
kat-get
<input type="text" name="katq" size="35" maxlength="80"
onkeydown="if (event.keyCode == 13) { kat.search(this.value); return false; }">
</form>
</div>
<div id="hits"></div>
<div id="status"></div>
</body>
</html>

@@ style.css
body { margin:0px }
#toolbar { top:0; position:fixed; width:100%; margin:0px; background-color:#650; color:white }
#status { bottom:0; position:fixed; width:100%; margin:0px; background-color:#650; color:white }
